//2043414 Marco Toffoletto
#ifndef SUBMARINE_HPP
#define SUBMARINE_HPP

#include "Submarine.h"

/*
The action performed by the submarine is to move and detect the presence of enemy ships in the new position in which
it is located: this is possible thanks to the "moveShip" function, which is only called if the position where the 
submarine has to move is not the same as its current position, and the "isShipAtPosition" function which checks if a 
ship is present in the 5*5 matrix generated by the sonar. As structured, the action call 
allows to use the sonar without moving.
*/
void Submarine::action(Position pos, DefenseGrid* enemyDefenseGrid) {
    if(this->getCenter() != pos) {
        defenseGrid_->moveShip(this, pos);
    }

    for (int i = pos.getX() - 2; i <= pos.getX() + 2; i++) {
        for (int j = pos.getY() - 2; j <= pos.getY() + 2; j++) { 
            try {
                if (enemyDefenseGrid->isShipAtPosition(Position(i, j))) {
                    attackGrid_->markScan(Position(i, j));
                }
            } catch(const std::out_of_range& e) { 
                //this catch allows me to ignore the part of the matrix that goes out of the grid
                continue;
            }
        }
    }
}

#endif
